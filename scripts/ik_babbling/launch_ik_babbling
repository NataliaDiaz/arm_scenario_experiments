#!/usr/bin/env python

import roslaunch
import rospy
import time
import os
from sensor_msgs.msg import (JointState, Image, CompressedImage)

import baxter_interface
from baxter_interface import CHECK_VERSION
rospy.set_param("~image_transport", "compressed")

sub_folder = time.ctime().replace(' ','_')
data_folder = os.environ['HOME']+'/Documents/DataSets/baxter_simulator/learning_to_press/original_data'
os.system('mkdir -p '+data_folder)

recording_rate = 10
cameras_fps = 50
cameras_resolution = (320,200)

try:
    rospy.wait_for_service('/cameras/list', timeout=1) # test if the service is available
    _REAL_ROBOT = True
    print("You're using the robot")
    rospy.loginfo("You're using the robot")
except rospy.ROSException: # if not, it is probably cause we're using the simulator
    _REAL_ROBOT = False
    print("You're using the simulator")
    rospy.loginfo("You're using the simulator")

def set_cameras():
    if _REAL_ROBOT:
        head_cam = baxter_interface.CameraController('head_camera')
        right_hand_cam = baxter_interface.CameraController('right_hand_camera')
        head_cam.resolution = cameras_resolution
        head_cam.fps = cameras_fps
        right_hand_cam.resolution = cameras_resolution
        right_hand_cam.fps = cameras_fps

def main():
    launch = roslaunch.scriptapi.ROSLaunch()
    launch.start()

    init_pose = launch.launch(roslaunch.core.Node('ann4smc', 'goto_init_pose' ))
    env = launch.launch(roslaunch.core.Node('ann4smc', 'spawn_environment' ))
    while(init_pose.is_alive()): time.sleep(0.1)

    babbler = launch.launch(roslaunch.core.Node('ann4smc', 'ik_babbler', args=data_folder))
    print('babbling has started')
    while(not babbler.is_alive()): time.sleep(0.1)
    print('babbling has started')
    while(babbler.is_alive()): time.sleep(0.1)
    print('babbling has finished')
    
    env.stop()
    launch.stop()


if __name__ == '__main__':
    print("Initializing node... ")
    rospy.init_node('Experience_launcher')
    print("Getting robot state... ")
    rs = baxter_interface.RobotEnable(CHECK_VERSION)
    print("Enabling robot... ")
    rs.enable()
    print("Running. Ctrl-c to quit")

    set_cameras()
    main()
